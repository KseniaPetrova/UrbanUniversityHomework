Домашнее задание по теме "Сайт администрирования"

Подумайте и проанализируйте следующие вопросы:

Заполнить свои таблицы данными на тестовом сайте https://sqliteonline.com/ используя sql запросы.
Пример и синтаксис запроса на заполнение таблицы:
     INSERT INTO ИМЯ_ТАБЛИЦЫ (столбец1, столбец2, столбец3,... столбец N)  VALUES (значение1, значение2, значение3,... значение N);
Создать несколько объектов в базе данных DJANGO приложения по примеру из лекции используя object.create. Используя запросы в базу данных измените один из элементов статьи: заголовок, содержание.
Пример изменения заголовка статьи post:
>>> post.title = 'New title'
>>> post.save()
В этом примере метод save() будет преобразован в SQL-выражение UPDATE.
Создайте запрос на получение всех объектов из базы данных и выполните его. Удалите один из объектов базы данных с мощью метода delete().
Пример запрос для получения всех объектов:
>>> all_posts = Post.objects.all()
>>> Post.objects.all()
С помощью метода filter() осуществите фильтрацию по объектам в базе данных. Например, статьи опубликованные в 2024 году, либо статьи созданные пользователем админ.
Пример запроса: Post.objects.filter(Критерий для фильтра)


Запросы в SQL
создание таблицы
CREATE TABLE games (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    genre TEXT NOT NULL,
    release_date DATE NOT NULL,
    developer TEXT NOT NULL
);

заполнение таблицы
INSERT INTO games (title, genre, release_date, developer) VALUES
('The Witcher 3: Wild Hunt', 'Action RPG', '2015-05-19', 'CD Projekt Red'),
('Horizon Zero Dawn', 'Action RPG', '2017-02-28', 'Guerrilla Games');

Запросы в питоне

в модуле models.py создаем следующи код
from django.db import models

class Game(models.Model):
    title = models.CharField(max_length=255)
    genre = models.CharField(max_length=100)
    release_date = models.DateField()
    developer = models.CharField(max_length=100)

    def __str__(self):
        return self.title

запросы в терминале пайчарма
открываем консоль QuerySet python manage.py shell
from myapp.models import Game

Создаем несколько объектов
Game.objects.create(title='The Legend of Zelda: Breath of the Wild', genre='Action-adventure', release_date='2017-03-03', developer='Nintendo')
Game.objects.create(title='Dark Souls III', genre='Action RPG', release_date='2016-03-24', developer='FromSoftware')

изменение заголовка
game = Game.objects.get(id=4)
game.title = 'Попаболь'
game.save()

запрос на получение всех объектов из базы данных
all_games = Game.objects.all()

удаление одного объекта из БД
game_delete = Game.objects.get(id=4)
game_delete.delete()

фильтрация по объектам в базе данных
Game.objects.filter(developer='CD Projekt Red')


